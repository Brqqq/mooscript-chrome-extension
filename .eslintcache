[{"C:\\git\\mooscript-chrome-extension\\src\\reportWebVitals.js":"1","C:\\git\\mooscript-chrome-extension\\src\\popup\\App.js":"2","C:\\git\\mooscript-chrome-extension\\src\\options\\reportWebVitals.js":"3","C:\\git\\mooscript-chrome-extension\\src\\popup\\reportWebVitals.js":"4","C:\\git\\mooscript-chrome-extension\\src\\options\\App.js":"5","C:\\git\\mooscript-chrome-extension\\src\\options\\NewUser.js":"6","C:\\git\\mooscript-chrome-extension\\src\\popup\\index.js":"7","C:\\git\\mooscript-chrome-extension\\src\\options\\AccountList.jsx":"8","C:\\git\\mooscript-chrome-extension\\src\\options\\index.js":"9"},{"size":362,"mtime":1612036749183,"results":"10","hashOfConfig":"11"},{"size":528,"mtime":1612037593052,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1612038048259,"results":"13","hashOfConfig":"11"},{"size":362,"mtime":1612038050841,"results":"14","hashOfConfig":"11"},{"size":450,"mtime":1613266637279,"results":"15","hashOfConfig":"11"},{"size":788,"mtime":1612039554656,"results":"16","hashOfConfig":"11"},{"size":500,"mtime":1612037593053,"results":"17","hashOfConfig":"11"},{"size":4573,"mtime":1613312983140,"results":"18","hashOfConfig":"11"},{"size":500,"mtime":1612037580500,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1p28f1t",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\git\\mooscript-chrome-extension\\src\\reportWebVitals.js",[],"C:\\git\\mooscript-chrome-extension\\src\\popup\\App.js",[],"C:\\git\\mooscript-chrome-extension\\src\\options\\reportWebVitals.js",[],"C:\\git\\mooscript-chrome-extension\\src\\popup\\reportWebVitals.js",[],"C:\\git\\mooscript-chrome-extension\\src\\options\\App.js",[],"C:\\git\\mooscript-chrome-extension\\src\\options\\NewUser.js",[],"C:\\git\\mooscript-chrome-extension\\src\\popup\\index.js",[],"C:\\git\\mooscript-chrome-extension\\src\\options\\AccountList.jsx",["39","40","41","42","43"],"/*global chrome*/\r\nimport React from \"react\";\r\nimport Play from \"./icons/play.svg\";\r\nimport Pause from \"./icons/pause.svg\";\r\n\r\nconst AccountList = (props) => {\r\n    const [accounts, setAccounts] = React.useState({});\r\n\r\n    const onAccountListChange = (changes) => {\r\n        if (changes.accounts != null) {\r\n            setAccounts(changes.accounts.newValue);\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        chrome.storage.sync.onChanged.addListener(onAccountListChange);\r\n\r\n        return () => {\r\n            chrome.storage.sync.onChanged.removeListener(onAccountListChange);\r\n        };\r\n    }, [onAccountListChange]);\r\n\r\n    React.useEffect(() => {\r\n        chrome.storage.sync.get(\"accounts\", ({ accounts }) => {\r\n            setAccounts(accounts || {});\r\n        })\r\n    }, []);\r\n\r\n    const onRemove = (email) => {\r\n        chrome.extension.getBackgroundPage().removeAccount(email);\r\n    }\r\n\r\n    const onLogin = async (email) => {\r\n        await chrome.extension.getBackgroundPage().useAuthToken(email);\r\n        window.open(\"https://www.mobstar.cc\");\r\n    }\r\n\r\n    const setActive = (email, isActive) => {\r\n        chrome.extension.getBackgroundPage().updateAccount(email, {\r\n            active: isActive\r\n        });\r\n    }\r\n\r\n    const Name = ({ account }) => {\r\n        if (account.invalidPassword) {\r\n            return <span style={{ color: \"red\" }}>Incorrect password!</span>\r\n        } else if (account.isDead) {\r\n            return <>\r\n                {account.name}\r\n                <span style={{ color: \"red\" }}>(DEAD)</span>\r\n            </>\r\n        } else if(!account.name) {\r\n            return <>Loading...</>\r\n        }\r\n\r\n        return <>{account.name}</>;\r\n    }\r\n\r\n    return <>\r\n        <h3>Accounts</h3>\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>Login</th>\r\n                    <th>Start</th>\r\n                    <th>Script status</th>\r\n                    <th>Email</th>\r\n                    <th>Name</th>\r\n                    <th>Rank</th>\r\n                    <th>Cash</th>\r\n                    <th>Bullets</th>\r\n                    <th>Country</th>\r\n                    <th>Lead</th>\r\n                    <th>Crew</th>\r\n                    <th>Paying days</th>\r\n                    <th>Honor</th>\r\n                    <th>Credits</th>\r\n                    <th>Remove</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {Object.keys(accounts).map(email => {\r\n                    const account = accounts[email];\r\n                    return <tr key={email}>\r\n                        <td>\r\n                            <button onClick={e => {\r\n                                e.preventDefault();\r\n                                onLogin(email);\r\n                            }}>\r\n                                Login\r\n                            </button>\r\n                        </td>\r\n                        <td>\r\n                            {account.active && <a href=\"#\" alt=\"Pause script\" onClick={() => setActive(email, false)}><img src={Pause} /></a>}\r\n                            {!account.active && <a href=\"#\" alt=\"Start script\" onClick={() => setActive(email, true)}><img src={Play} /></a>}\r\n                        </td>\r\n                        <td>\r\n                            {account.active && \"Running...\"}\r\n                            {!account.active && \"Paused\"}\r\n                        </td>\r\n                        <td>{email}</td>\r\n                        <td><Name account={account} /></td>\r\n                        <td>{account.rank}</td>\r\n                        <td>â‚¬ {account.cash && account.cash.toLocaleString()}</td>\r\n                        <td>{account.bullets}</td>\r\n                        <td>{account.country}</td>\r\n                        <td>{typeof account.lead === \"number\" ? `${account.lead.toLocaleString()} kg` : account.lead}</td>\r\n                        <td>{account.crew}</td>\r\n                        <td>{account.payingDays}</td>\r\n                        <td>{account.honor}</td>\r\n                        <td>{account.credits}</td>\r\n                        <td>\r\n                            <button onClick={e => {\r\n                                e.preventDefault();\r\n                                onRemove(email);\r\n                            }}>\r\n                                Remove\r\n                            </button>\r\n                        </td>\r\n                    </tr>\r\n                })}\r\n            </tbody>\r\n        </table>\r\n    </>;\r\n};\r\n\r\nexport default AccountList;","C:\\git\\mooscript-chrome-extension\\src\\options\\index.js",[],{"ruleId":"44","severity":1,"message":"45","line":9,"column":11,"nodeType":"46","endLine":13,"endColumn":6},{"ruleId":"47","severity":1,"message":"48","line":94,"column":48,"nodeType":"49","endLine":94,"endColumn":119},{"ruleId":"50","severity":1,"message":"51","line":94,"column":119,"nodeType":"49","endLine":94,"endColumn":138},{"ruleId":"47","severity":1,"message":"48","line":95,"column":49,"nodeType":"49","endLine":95,"endColumn":119},{"ruleId":"50","severity":1,"message":"51","line":95,"column":119,"nodeType":"49","endLine":95,"endColumn":137},"react-hooks/exhaustive-deps","The 'onAccountListChange' function makes the dependencies of useEffect Hook (at line 21) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'onAccountListChange' in its own useCallback() Hook.","VariableDeclarator","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images."]